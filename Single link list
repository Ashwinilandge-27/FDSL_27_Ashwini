#include<stdio.h>
#include<stdlib.h>
struct node
{
 int data;
 struct node *next;
 };
 struct node *head = NULL;
 struct node *temp,*newnode,*head,*prevnode;
 void insertAtFirst() {
    struct node *newNode = malloc(sizeof(struct node));
    printf("Enter data for new node: \n");
    scanf("%d", &newNode->data);
    
    if (head == NULL) {
        head = newNode;
        newNode->next = NULL;
    } else {
        newNode->next = head;
        head = newNode;
    }
}
 
 void insertAtLast() {
    struct node *newNode = malloc(sizeof(struct node));
    struct node *temp=head;
    printf("Enter data for new node: \n");
    scanf("%d", &newNode->data);
    
    newNode->next = NULL;
    
    if (head == NULL) {
        head = newnode;
    } else {
        temp = head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = newNode;
    }
}
 void deleteFirst() {
    if (head == NULL) {
        printf("The list is empty.\n");
    } else {
        temp = head;
        head = head->next;
        temp->next = NULL;
        free(temp);
    }
}
void deleteLast() {
    if (head == NULL) {
        printf("The list is empty.\n");
    } else {
        struct node *temp = head;
        struct node *prevNode = NULL;
        while (temp->next == NULL) {
            prevnode=temp;
            temp=temp->next;
        }
            while (temp->next != NULL) {
                prevNode = temp;
                temp = temp->next;
            }
            prevNode->next = NULL;
            free(temp);
        }
    } 
  void display() {
    temp=head;
    while (temp != NULL) {
        printf("%d", temp->data);
        temp = temp->next;
    }
   }
  
  int main(){
     int ch;
     head=NULL;
     struct node *newNode = malloc(sizeof(struct node));
     while (ch!=0) {
        printf("\nEnter your choice:\n 1. Insert at first\n 2. Insert at last\n 3. Delete first\n 4. Delete last\n 5. Display\n 6.Exit\n");
        scanf("%d", &ch);
     
     switch(ch){
     case 1: 
            insertAtFirst();
            break;
     case 2: 
            insertAtLast();
            break;
     case 3: 
            deleteFirst();
            break;
     case 4: 
            deleteLast();
            break;
     case 5:
            display();
            break;
     case 6:
            return 0;
            break;
     default:
            printf("\nInvalid choice!\n");
     }
    }
return 0;
}    
           
     
 
 
   
